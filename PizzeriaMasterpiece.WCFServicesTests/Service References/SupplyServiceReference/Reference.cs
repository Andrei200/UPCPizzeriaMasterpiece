//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PizzeriaMasterpiece.WCFServicesTests.SupplyServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SupplyDTO", Namespace="http://schemas.datacontract.org/2004/07/PizzeriaMasterpiece.DTO")]
    [System.SerializableAttribute()]
    public partial class SupplyDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<byte> IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> QuantityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> SupplyIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<byte> IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Quantity {
            get {
                return this.QuantityField;
            }
            set {
                if ((this.QuantityField.Equals(value) != true)) {
                    this.QuantityField = value;
                    this.RaisePropertyChanged("Quantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> SupplyId {
            get {
                return this.SupplyIdField;
            }
            set {
                if ((this.SupplyIdField.Equals(value) != true)) {
                    this.SupplyIdField = value;
                    this.RaisePropertyChanged("SupplyId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SupplyServiceReference.ISupplyServie")]
    public interface ISupplyServie {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplyServie/ListAllSupplyInformation", ReplyAction="http://tempuri.org/ISupplyServie/ListAllSupplyInformationResponse")]
        PizzeriaMasterpiece.WCFServicesTests.SupplyServiceReference.SupplyDTO[] ListAllSupplyInformation();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplyServie/ListAllSupplyInformation", ReplyAction="http://tempuri.org/ISupplyServie/ListAllSupplyInformationResponse")]
        System.Threading.Tasks.Task<PizzeriaMasterpiece.WCFServicesTests.SupplyServiceReference.SupplyDTO[]> ListAllSupplyInformationAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplyServie/UpdateSupplyInformation", ReplyAction="http://tempuri.org/ISupplyServie/UpdateSupplyInformationResponse")]
        PizzeriaMasterpiece.WCFServicesTests.SupplyServiceReference.SupplyDTO UpdateSupplyInformation(PizzeriaMasterpiece.WCFServicesTests.SupplyServiceReference.SupplyDTO supply);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplyServie/UpdateSupplyInformation", ReplyAction="http://tempuri.org/ISupplyServie/UpdateSupplyInformationResponse")]
        System.Threading.Tasks.Task<PizzeriaMasterpiece.WCFServicesTests.SupplyServiceReference.SupplyDTO> UpdateSupplyInformationAsync(PizzeriaMasterpiece.WCFServicesTests.SupplyServiceReference.SupplyDTO supply);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISupplyServieChannel : PizzeriaMasterpiece.WCFServicesTests.SupplyServiceReference.ISupplyServie, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SupplyServieClient : System.ServiceModel.ClientBase<PizzeriaMasterpiece.WCFServicesTests.SupplyServiceReference.ISupplyServie>, PizzeriaMasterpiece.WCFServicesTests.SupplyServiceReference.ISupplyServie {
        
        public SupplyServieClient() {
        }
        
        public SupplyServieClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SupplyServieClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SupplyServieClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SupplyServieClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public PizzeriaMasterpiece.WCFServicesTests.SupplyServiceReference.SupplyDTO[] ListAllSupplyInformation() {
            return base.Channel.ListAllSupplyInformation();
        }
        
        public System.Threading.Tasks.Task<PizzeriaMasterpiece.WCFServicesTests.SupplyServiceReference.SupplyDTO[]> ListAllSupplyInformationAsync() {
            return base.Channel.ListAllSupplyInformationAsync();
        }
        
        public PizzeriaMasterpiece.WCFServicesTests.SupplyServiceReference.SupplyDTO UpdateSupplyInformation(PizzeriaMasterpiece.WCFServicesTests.SupplyServiceReference.SupplyDTO supply) {
            return base.Channel.UpdateSupplyInformation(supply);
        }
        
        public System.Threading.Tasks.Task<PizzeriaMasterpiece.WCFServicesTests.SupplyServiceReference.SupplyDTO> UpdateSupplyInformationAsync(PizzeriaMasterpiece.WCFServicesTests.SupplyServiceReference.SupplyDTO supply) {
            return base.Channel.UpdateSupplyInformationAsync(supply);
        }
    }
}
